Java中
String demo = "Hello,world!";
1.int length = demo.length(); //获取字符串的长度
2.boolean equals = demo.equals("Hello,world"); // 比较两个字符串相等
3.boolean contains = demo.contains("word"); // 是否包含子串
4.String replace = demo.replace("Hello,", "Yeah@"); // 将指定字符串(或正则表达式)替换，返回替换后的结果
5.char little = demo.charAt(5); // 查找字符串中索引为5的字符（索引从0开始）
6.String trim = demo.trim(); // 将字符串左右空格去除，返回去除空格后的结果
7.String concat = demo.concat("Great!"); // 拼接字符串，返回拼接结果
8.char[] charArray = demo.toCharArray(); // 返回该字符串组成的字符数组
9.String upperCase = demo.toUpperCase(); // 返回该字符串的大写形式
10.String lowerCase = demo.toLowerCase(); // 返回该字符串的小写形式

Python中
s = "Hello,World"
1.print(s[1]) # 'e', 取出某个位置的字符
2.print(s[1:6]) # 'ello,' ，字符串切片
3.print(len(s)) # 11, 返回字符串的长度
4.print("e" in s) # True, 返回字符是否在字符串中
5.print(s.lower()) # 'hello,world', 将字符串所有元素变为小写
6.print(s.upper()) # 'HELLO,WORLD', 将字符串所有元素变为大写
7.s += '...' # Hello,World... ，字符串拼接，在字符串后拼接另一个字符串
8.print(s.find('lo')) # 3, 返回第一次找到指定字符串的起始位置（从左往右找）
9.print(s.swapcase()) # hELLO,wORLD..., 将大小写互换
10.print(s.split(',')) # ['Hello', 'World...'], 将字符串根据目标字符分割